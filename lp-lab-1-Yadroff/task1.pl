%  Реализация своих версий стандартных предикатов обработки списков

%  Длина списка
%  (список, длина)
my_length([], 0).
my_length([_|L], N):-my_length(L, M), N is M + 1.

%  Принадлежность элемента списку
%  (элемент, список)
my_member(X, [X|_]).
my_member(X, [_|T]):-my_member(X, T).

%  Конкатeнация списков
%  (список1, список2, список1+2)
my_append([], L, L).
my_append([X|L1], L2, [X|L3]):-my_append(L1, L2, L3).

%  Удаление элемента из списка
%  (элемент, список, список без элемента)
my_remove(X, [X|T], T).
my_remove(X, [Y|T], [Y|Z]):-my_remove(X, T, Z).

%  Перестановки элементов в списке
%  (список, перестановка)
my_permute([], []).
my_permute(L, [X|T]):-my_remove(X, L, Y), my_permute(Y, T).

%  Подсписки списка
%  (подсписок, список)
my_sublist(S, L):- my_append(_, L1, L), my_append(S, _, L1).

%  Вариант № 11: Удаление элемента с заданным номером

%  Реализация специального предиката обработки списка
%  на основе стандартных предикатов
%  (список, позиция, новый список)
%  здесь считается, что нумерация в списке начинается с 1
delete_from_list_std(L, N, R):- N1 is N - 1, my_lenght(XL, N1), append(XL, [X|XR], R), my_lenght(XR, N1), append(XL, XR, R).

%  Реализация специального предиката обработки списка
%  без использования стандартных предикатов
%  (список, позиция, новый список)
delete_from_list([A|L],1,L).
delete_from_list([A|L],N,R):- N1 is N-1, delete_from_list(L, N1, R0), R=[A|R0].

%  Вариант № 15:Вычисление позиции первого отрицательного элемента в списке

%  Реализация предиката обработки числового списка (списков)
%  на основе стандартных предикатов
%  (список, результат)
first_otr_std([A|L], R):- A < 0, R is 1.
first_otr_std([A|L], R):- A >= 0, first_otr_std(L, R0), R is R0 + 1.
%  Реализация предиката обработки числового списка (списков)
%  без использования стандартных предикатов
%  (список)
first_otr([], 0).
first_otr([A|L], R):- A < 0, R is 1.
first_otr([A|L], R):- A >= 0, my_length(L, X), X > 0, first_otr(L, R0), R is R0 + 1.

%  Пример совместного использования:
%  удаление N-го элемента и поиск первого отрицательного числа.
%  (Список, номер, результат)
mixed(L, N, R) :- delete_from_list(L, N, NewList), first_otr(NewList, R).
